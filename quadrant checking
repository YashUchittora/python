{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "problem: given a point in 2D space , find the quadrant in which it lies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "point is on the y axis\n"
     ]
    }
   ],
   "source": [
    "x=float(input(\"enter the x coordinate: \"))                      #input from user for the x coordinate of point\n",
    "y=float(input(\"enter the y coordinate: \"))                      #input from user for the y coordinate of point\n",
    "\n",
    "if x==0 and y==0:                                               #if pt. is (0,0) then it is at origin\n",
    "    print(\"point is on origin\")\n",
    "elif x>0 and y>0:                                               #if both coordinates are positive then it lies in first quadrant\n",
    "    print(\"point lies in the first quadrant\") \n",
    "elif x<0 and y>0:\n",
    "    print(\"point lies in the second quadrant\")                  #if both coordinates are negative then it lies in second quadrant\n",
    "elif x<0 and y<0: \n",
    "    print(\"point lies in the third quadrant\")                   #if x is negative and y is positive then it lies in the third quadrant\n",
    "elif x>0 and y<0:\n",
    "    print(\"point lies in the fourth quadrant\")                  #if x is positive and y is negative then pt. lies in the fourth quadrant\n",
    "elif x==0:\n",
    "    print(\"point is on the y axis\")                             #if x=0 then point is on the y axis \n",
    "else: \n",
    "    print(\"point is on the x axis\")                             #if y=0 then point is on the x axis "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
